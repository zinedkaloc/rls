name: Monorepo Release and Update Changelog
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install Dependencies
        run: npm ci

      - name: Bootstrap Lerna
        run: npx lerna bootstrap

      - name: Check for changes and update versions
        run: |
          packages=("agnost/engine/core" "agnost/engine/monitor" "agnost/engine/realtime" "agnost/engine/scheduler" "agnost/engine/worker" "agnost/platform/core" "agnost/platform/sync" "agnost/platform/worker" "agnost/studio")
          all_changes=""
          overall_version=""
          for package in ${packages[@]}; do
            cd $package
            echo "Checking changes for $package..."
            result=$(git diff --name-only origin/master..HEAD . | wc -l)
            if [ "$result" -gt "0" ]; then
              echo "$package has changes. Updating version..."
              npm ci
              npm version patch --no-git-tag-version
              version=$(cat package.json | jq -r '.version')
              git add package.json
              git config --local user.email "action@github.com"
              git config --local user.name "GitHub Action"
              git commit -m "chore(release): $version [skip ci]"

              echo "Generating changelog for $package"
              changelog=$(npx conventional-changelog -p angular -i CHANGELOG.md -s)
              all_changes+="# $package $version\n"
              all_changes+="$changelog\n\n"
              overall_version="$version"
            fi
            cd -
          done
          echo "::set-output name=all_changes::$all_changes"
          echo "::set-output name=overall_version::$overall_version"
        id: version_changelog

      - name: Update overall version
        run: |
          echo "Updating overall version..."
          echo "::set-output name=overall_version::$(npm version patch --no-git-tag-version)"
        id: overall_version

      - name: Update overall changelog
        run: |
          echo "${{ steps.version_changelog.outputs.all_changes }}" >> CHANGELOG.md
          git add CHANGELOG.md
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "Update CHANGELOG.md [skip ci]"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Create tag
        run: git tag v${{ steps.overall_version.outputs.overall_version }}

      - name: Push tag
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.overall_version.outputs.overall_version }}
          release_name: Release v${{ steps.overall_version.outputs.overall_version }}
          body: ${{ steps.version_changelog.outputs.all_changes }}
          draft: false
          prerelease: false
